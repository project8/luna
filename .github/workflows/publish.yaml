
name: Publish

on:
  pull_request:
  push:
    branches: [main, develop]
    tags: ['*']
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  BASE_IMG_REPO: project8/luna_base
  BASE_IMG_TAG: v1.3.4

jobs:

  init:
    runs-on: ubuntu-latest
    outputs:
      luna_base_version: ${{ steps.setversion.outputs.luna_base_version }}
      katydid_version: ${{ steps.setversion.outputs.katydid_version }}
      locust_version: ${{ steps.setversion.outputs.locust_version }}
      mermithid_version: ${{ steps.setversion.outputs.mermithid_version }}

    steps:
      - name: Set Versions
        id: setversion
        run: |
          git clone https://github.com/project8/luna_base.git
          cd luna_base
          git checkout main
          echo "::set-output name=luna_base_version::$(git describe --abbrev=0 --tags)"
          cd ..
          
          git clone https://github.com/project8/katydid.git
          cd katydid
          git checkout main
          echo "::set-output name=katydid_version::$(git describe --abbrev=0 --tags)"
          cd ..
          
          git clone https://github.com/project8/locust_mc.git
          cd locust_mc
          git checkout master
          echo "::set-output name=locust_version::$(git describe --abbrev=0 --tags)"
          cd ..
          
          git clone https://github.com/project8/mermithid.git
          cd mermithid
          git checkout main
          echo "::set-output name=mermithid_version::$(git describe --abbrev=0 --tags)"
          cd ..

  publish:

    name: Build and push the Luna Docker image
    runs-on: ubuntu-latest
    needs: [init]

    strategy:
      matrix:
        build: [Dev, Prod]
        fail-fast: [false]
        include:
          - build: Dev
            tag-suffix: '-dev'
          - build: Prod
            tag-suffix: ''

    steps:
    
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # type=semver,pattern={{raw}} -- used only on push tag events; gives us the `vX.Y.Z`` tag
      # ref,event=branch -- used only on pull_request events; gives us a `pr-X`` tag
      # ref, event=pr -- used only on push events; gives us main and develop tags
      # ref, raw,value=latest,... -- restricted to only main-branch push events; gives us the `latest` tag
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          flavor: |
            latest=auto
            suffix=${{ matrix.tag-suffix }},onlatest=true
          tags: |
            type=semver,pattern={{raw}}
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Get previous tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        id: tag_name
        with:
          fallback: beta

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        id: setup_buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          driver: docker

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build Luna
        id: build
        uses: docker/build-push-action@v5
        with:
          context: Main/
          file: Main/Dockerfile
          build-args: |
            img_repo=${{ env.REGISTRY }}/${{ env.BASE_IMG_REPO }}
            img_tag=${{ needs.init.outputs.luna_base_version }}
            locust_tag=${{ needs.init.outputs.locust_version }}
            katydid_tag=${{ needs.init.outputs.katydid_version }}
            p8compute_tag=${{ steps.tag_name.outputs.tag }}
            tag_suffix=${{ matrix.tag-suffix }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          platforms: linux/amd64
#          platforms: linux/amd64,linux/arm64

#            mermithid_tag=${{ needs.init.outputs.mermithid_version }}${{ matrix.tag-suffix }}

      - name: Save images
        run: |
          docker save -o luna.tar ${{ steps.docker_meta.outputs.tags }}

      - name: Cache images
        uses: actions/upload-artifact@v3
        with:
          name: luna-images
          path: luna.tar

      - name: Push images
        if: github.event_name == 'push' && ( contains(github.ref, 'refs/tags/') || github.ref == 'refs/heads/develop' )
        run: |
          docker push -a ${{ env.REGISTRY }}/${{ github.repository }}

  jupyter:

    name: Build and push the Jupyter Docker image
    runs-on: ubuntu-latest
    needs: [publish]

    strategy:
      matrix:
        build: [Dev, Prod]
        fail-fast: [false]
        include:
          - build: Dev
            tag-suffix: '-dev'
          - build: Prod
            tag-suffix: ''

    steps:
    
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Re-run this action to get the jupyter tags
      # type=semver,pattern={{raw}} -- used only on push tag events; gives us the `vX.Y.Z`` tag
      # ref,event=branch -- used only on pull_request events; gives us a `pr-X`` tag
      # ref, event=pr -- used only on push events; gives us main and develop tags
      # ref, raw,value=latest,... -- restricted to only main-branch push events; gives us the `latest` tag
      - name: Docker meta
        id: docker_meta_jupyter
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          flavor: |
            latest=auto
            suffix=${{ matrix.tag-suffix }}-jupyter,onlatest=true
          tags: |
            type=semver,pattern={{raw}}
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Extract images from Cache
        uses: actions/download-artifact@v3
        with:
          name: luna-images

      - name: Load images
        run: |
          docker load --input luna.tar

      - name: Build Luna-Jupyter
        id: build_jupyter
        uses: docker/build-push-action@v5
        with:
          context: Jupyter/
          file: Jupyter/Dockerfile
          build-args: |
            img_repo=${{ env.REGISTRY }}/${{ github.repository }}
            img_tag=${{ env.DOCKER_METADATA_OUTPUT_VERSION }}
          tags: ${{ steps.docker_meta_jupyter.outputs.tags }}
          platforms: linux/amd64
#          platforms: linux/amd64,linux/arm64

      - name: Push images
        if: github.event_name == 'push' && ( contains(github.ref, 'refs/tags/') || github.ref == 'refs/heads/develop' )
        run: |
          docker push -a ${{ env.REGISTRY }}/${{ github.repository }}
